<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PCA | Sitio en espa√±ol</title>
    <link>/es/tags/pca/</link>
      <atom:link href="/es/tags/pca/index.xml" rel="self" type="application/rss+xml" />
    <description>PCA</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es</language><copyright>¬© Maria Dermit, {2020}</copyright><lastBuildDate>Thu, 04 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu89765a528fbe3e89fbea23b995128687_292554_512x512_fill_lanczos_center_2.png</url>
      <title>PCA</title>
      <link>/es/tags/pca/</link>
    </image>
    
    <item>
      <title>Clasificaci√≥n PCA y UMAP de aceites vegetales con tidymodels &amp; base R</title>
      <link>/es/2021-02-04-prendizaje-no-supervisado-con-tidymodels/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <guid>/es/2021-02-04-prendizaje-no-supervisado-con-tidymodels/</guid>
      <description>
&lt;script src=&#34;../../../es/2021-02-04-prendizaje-no-supervisado-con-tidymodels/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#motivaci√≥n-y-datos&#34;&gt;Motivaci√≥n y datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pca-in-base-r&#34;&gt;PCA in base R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pca-con-tidymodels&#34;&gt;PCA con Tidymodels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#umap-con-tidymodels&#34;&gt;UMAP con Tidymodels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusiones&#34;&gt;Conclusiones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidymodels)
library(modeldata)
library(ggfortify)
library(tidyverse)
library(embed)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;motivaci√≥n-y-datos&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Motivaci√≥n y datos&lt;/h1&gt;
&lt;p&gt;Mientras exploraba el üì¶
&lt;a href=&#34;https://github.com/tidymodels/modeldata&#34;&gt;modeldata&lt;/a&gt; encontr√© el conjunto de datos &lt;code&gt;aceites&lt;/code&gt; (&lt;code&gt;oils&lt;/code&gt;), que tiene informaci√≥n de cromatograf√≠a de gases utilizada para determinar la composici√≥n de √°cidos grasos de 96 muestras correspondientes a 7 aceites vegetales diferentes del mercado. Estos datos fueron &lt;a href=&#34;https://www.sciencedirect.com/science/article/abs/pii/S0169743904001200&#34;&gt;publicados&lt;/a&gt; por un laboratorio de qu√≠mica. Estos datos son muy parecidos a lo que obtenemos en un laboratorio de prote√≥mica, y lo primero que tendemos a hacer para explorar estos datos complejos es hacer un PCA para tener una idea simplificada de su distribuci√≥n en el espacio.&lt;/p&gt;
&lt;div id=&#34;exploracion-de-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exploracion de datos&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(oils)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(oils)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [96 √ó 8] (S3: tbl_df/tbl/data.frame)
##  $ palmitic  : num [1:96] 9.7 11.1 11.5 10 12.2 9.8 10.5 10.5 11.5 10 ...
##  $ stearic   : num [1:96] 5.2 5 5.2 4.8 5 4.2 5 5 5.2 4.8 ...
##  $ oleic     : num [1:96] 31 32.9 35 30.4 31.1 43 31.8 31.8 35 30.4 ...
##  $ linoleic  : num [1:96] 52.7 49.8 47.2 53.5 50.5 39.2 51.3 51.3 47.2 53.5 ...
##  $ linolenic : num [1:96] 0.4 0.3 0.2 0.3 0.3 2.4 0.4 0.4 0.2 0.3 ...
##  $ eicosanoic: num [1:96] 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 ...
##  $ eicosenoic: num [1:96] 0.1 0.1 0.1 0.1 0.1 0.5 0.1 0.1 0.1 0.1 ...
##  $ class     : Factor w/ 7 levels &amp;quot;corn&amp;quot;,&amp;quot;olive&amp;quot;,..: 4 4 4 4 4 4 4 4 4 4 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;oils %&amp;gt;%
  count(class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 2
##   class         n
## * &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;
## 1 corn          2
## 2 olive         7
## 3 peanut        3
## 4 pumpkin      37
## 5 rapeseed     10
## 6 soybean      11
## 7 sunflower    26&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;¬°Esto parece un conjunto de datos divertido para proyectar en un espacio de dimensi√≥n reducida como PCA o UMAP!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;pca-in-base-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;PCA in base R&lt;/h1&gt;
&lt;p&gt;Los pasos para generar los componentes para PCA en base R ser√≠an:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_res &amp;lt;- oils %&amp;gt;%
  dplyr::select(where(is.numeric)) %&amp;gt;% # select only the numeric variables
  tidyr::drop_na() %&amp;gt;% # to drop any NA
  scale() %&amp;gt;% # to initially normalise the variances
  prcomp() # to convert numeric data to principal components&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_res&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Standard deviations (1, .., p=7):
## [1] 1.78631393 1.21432295 1.11849881 0.80775705 0.49010697 0.43543634 0.03437479
## 
## Rotation (n x k) = (7 x 7):
##                   PC1         PC2         PC3         PC4         PC5
## palmitic   -0.1724393 -0.69299469 -0.04593832  0.46972220 -0.19508286
## stearic    -0.4589668 -0.25101419 -0.24289349  0.18544207  0.61204669
## oleic       0.4578722 -0.39918199  0.14986398 -0.28962122  0.08386290
## linoleic   -0.4590266  0.44858975 -0.11564307  0.05114339 -0.07111895
## linolenic   0.3446082  0.27607934  0.23426894  0.80580939 -0.02884460
## eicosanoic  0.1682596 -0.01595516 -0.81991595  0.04591653 -0.46100031
## eicosenoic  0.4384013  0.14034544 -0.41942317  0.08389933  0.60157904
##                   PC6        PC7
## palmitic   -0.4661816 0.10904667
## stearic     0.5067647 0.03928963
## oleic       0.2409267 0.67792957
## linoleic   -0.2371904 0.71467174
## linolenic   0.2916300 0.12220735
## eicosanoic  0.2889776 0.03216008
## eicosenoic -0.4929535 0.01587562&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los componentes principales (PC de principal components) para cada clase de aceite se agregaron en un objeto &lt;code&gt;prcomp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Y podr√≠amos trazar esos componentes con ‚Äúautoplot‚Äù&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;autoplot(pca_res, data = oils, colour = &amp;quot;class&amp;quot;) +
  labs(color = NULL) + theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../../es/2021-02-04-prendizaje-no-supervisado-con-tidymodels/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;
Podemos ver que este PCA separa mucho el aceite de oliva de los otros 7 tipos de aceites. Tambi√©n parece que uno de los aceites de oliva est√° m√°s cerca del tipo de aceite de man√≠ en el espacio PCA.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pca-con-tidymodels&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;PCA con Tidymodels&lt;/h1&gt;
&lt;p&gt;Modelar es muy parecido a cocinar, y en el universo de Tidymodels el lenguaje refleja muy bien esto üë©‚Äçüç≥. Hay tres cosas que tendremos que hacer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escribir una receta üë©‚Äçüç≥&lt;/li&gt;
&lt;li&gt;Preparar esa receta üçù&lt;/li&gt;
&lt;li&gt;Sacarle jugo a la receta ü•õ&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;escribir-una-receta&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Escribir una receta&lt;/h2&gt;
&lt;p&gt;Escribimos la receta agregando una serie de pasos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_rec &amp;lt;- recipe(~., data = oils) %&amp;gt;% # empieza a escribir la receta con todos los datos
  update_role(class, new_role = &amp;quot;id&amp;quot;) %&amp;gt;% # to keep this column around but not include it in the model
  step_normalize(all_predictors()) %&amp;gt;% # para mantener esta columna pero no incluirla en el modelo
  step_pca(all_predictors()) # para convertir datos num√©ricos en componentes principales&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como vemos los pasos que debemos seguir para escribir la receta son muy similares a los pasos seguidos en base R.&lt;/p&gt;
&lt;p&gt;Sin embargo, esto no es todo. De hecho, si exploramos c√≥mo se ve la receta:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_rec&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##         id          1
##  predictor          7
## 
## Operations:
## 
## Centering and scaling for all_predictors()
## No PCA components were extracted.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que se cre√≥ la matriz de dise√±o con id y variables predictoras. La receta nos dice que los &lt;em&gt;No se extrajeron componentes de PCA&lt;/em&gt;. Esto se debe a que una receta especifica lo que queremos hacer, pero todav√≠a no afecta a los datos. Necesitamos extraer esos componentes preparando la receta&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preparar-esa-receta&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparar esa receta&lt;/h2&gt;
&lt;p&gt;Podemos usar la funci√≥n &lt;code&gt;prep&lt;/code&gt; para prepararnos para entrenar esta receta de datos. Prep devuelve una receta actualizada con las estimaciones.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_prep &amp;lt;- prep(pca_rec)
pca_prep&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##         id          1
##  predictor          7
## 
## Training data contained 96 data points and no missing data.
## 
## Operations:
## 
## Centering and scaling for palmitic, stearic, oleic, linoleic, ... [trained]
## PCA extraction with palmitic, stearic, oleic, linoleic, ... [trained]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En las operaciones vemos que los datos han sido [entrenados].&lt;/p&gt;
&lt;p&gt;¬°Excelente! Pero estos todav√≠a no son los componentes ü§î. ¬°Necesitamos finalizar esa receta preparada &lt;strong&gt;haci√©ndola jugo&lt;/strong&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sacarle-jugo-a-la-receta&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sacarle jugo a la receta&lt;/h2&gt;
&lt;p&gt;Necesitamos aplicar esta operaci√≥n a los datos; &lt;code&gt;juice&lt;/code&gt; devuelve un tibble en el que se han aplicado todos los pasos a los datos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_juiced &amp;lt;- juice(pca_prep)
pca_juiced&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 96 x 6
##    class      PC1    PC2     PC3      PC4      PC5
##    &amp;lt;fct&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 pumpkin -1.22  -0.296 -0.245  -0.158    0.0882 
##  2 pumpkin -1.10  -0.771 -0.198  -0.00964 -0.0901 
##  3 pumpkin -1.08  -1.06  -0.212   0.0154   0.00279
##  4 pumpkin -1.14  -0.266 -0.192  -0.177   -0.137  
##  5 pumpkin -1.25  -0.995 -0.241   0.226   -0.186  
##  6 pumpkin  0.572 -0.500 -0.0821  0.0652   0.286  
##  7 pumpkin -1.13  -0.530 -0.202  -0.0640  -0.0592 
##  8 pumpkin -1.13  -0.530 -0.202  -0.0640  -0.0592 
##  9 pumpkin -1.08  -1.06  -0.212   0.0154   0.00279
## 10 pumpkin -1.14  -0.266 -0.192  -0.177   -0.137  
## # ‚Ä¶ with 86 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;¬°Excelente! ¬°Los datos procesados est√°n listos para ser ‚Äúconsumidos‚Äù por un gr√°fico!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pca_juiced %&amp;gt;%
  ggplot(aes(PC1, PC2, label = class)) +
  geom_point(aes(color = class), alpha = 0.7, size = 2) +
  labs(color = NULL) +theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../../es/2021-02-04-prendizaje-no-supervisado-con-tidymodels/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;El PCA inicial y este generado con Tidymodels se ven muy similares. Ten en cuenta que la gr√°fica autom√°tica agrega informaci√≥n a la gr√°fica, como proporcionar el porcentaje de PC. Entonces, ¬øcu√°l es el punto de usar Tidymodels si es una serie de pasos tan larga en comparaci√≥n con la base R? &lt;a href=&#34;https://www.tidymodels.org/&#34;&gt;Tidymodels&lt;/a&gt; integra muchos paquetes modulares que facilitan la creaci√≥n y evaluaci√≥n de diferentes modelos.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;umap-con-tidymodels&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;UMAP con Tidymodels&lt;/h1&gt;
&lt;p&gt;Adem√°s de PCA, podr√≠amos trazar una &lt;a href=&#34;https://umap-learn.readthedocs.io/en/latest/&#34;&gt;representaci√≥n UMAP&lt;/a&gt;. Para hacer eso, necesitar√≠amos una nueva receta, una que incluya un paso para especificar la t√©cnica de reducci√≥n de dimensi√≥n UMAP; este paso se llama naturalmente &lt;code&gt;step_umap&lt;/code&gt;. Una vez que tenemos esta receta, el proceso es el mismo. Receta, preparaci√≥n, jugo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;umap_rec &amp;lt;- recipe(~., data = oils) %&amp;gt;%
  update_role(class, new_role = &amp;quot;id&amp;quot;) %&amp;gt;%
  step_normalize(all_predictors()) %&amp;gt;%
  step_umap(all_predictors()) # este paso hace que la receta sea diferente&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;umap_prep &amp;lt;- prep(umap_rec)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;umap_juiced &amp;lt;- juice(umap_prep)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;umap_juiced %&amp;gt;%
  ggplot(aes(umap_1, umap_2, label = class)) +
  geom_point(aes(color = class), alpha = 0.7, size = 2) +
  labs(color = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;featured2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Este modelo separa los datos en el espacio de forma algo diferente a la PCA. PCA y UMAP son fundamentalmente diferentes en que PCA es un algoritmo de reducci√≥n de dimensionalidad lineal, mientras que UMAP no es lineal. Adem√°s, hay algunos par√°metros importantes que pueden afectar el aspecto de la representaci√≥n UMAP. Esto se explica muy bien en el archivo README del paquete umapr de &lt;a href=&#34;https://github.com/ropenscilabs/umapr&#34;&gt;ropenscilabs&lt;/a&gt;. Puedes ver argumentos adicionales ofrecidos por &lt;code&gt;step_umap&lt;/code&gt; con &lt;code&gt;?step_umap&lt;/code&gt;. Tambi√©n hay que tener en cuenta que hemos entrenado nuestros modelos con un peque√±o conjunto de datos (no hemos realizado un remuestreo) y no hemos evaluado su rendimiento.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusiones&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusiones&lt;/h1&gt;
&lt;p&gt;El procesamiento de datos para realizar aprendizaje autom√°tico sin supervisi√≥n con Tidymodels es muy similar al de base R. Los algoritmos de reducci√≥n de dimensionalidad lineal y no lineal separan los datos en el espacio reducido de manera diferente.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
